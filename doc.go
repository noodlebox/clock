// The clock package duplicates much of the functionality of `time` from the
// standard library, while allowing for greater control over the flow of time
// for use in testing or simulations. Each `Clock` instance may track its own
// flow of time, appropriately triggering `Timer`s and `Ticker`s created with
// them. They can be set to track a reference `Clock` with a specified time
// scale pause or resume or adjust the scale of this tracking while running,
// or may advance only when explicitly stepped.
//
// `Time`s generated by different `Clock` instances are not comparable in the
// typically meaningful way, but their differences can be useful when syncing
// between `Clocks`.
//
// `Clock`s created by this package are at least guaranteed to be monotonic,
// even if their flow is discontinuous. Negative scale factors and time steps
// are clamped to zero. If a `Clock` needs to sync with a `Clock` that is
// potentially behind it, it can slew the needed adjustment over a longer
// duration to ensure the reported time never decreases.
package clock
